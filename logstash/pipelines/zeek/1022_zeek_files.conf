########################
# Copyright (c) 2025 Battelle Energy Alliance, LLC.  All rights reserved.
#######################

filter {

  if ([log_source] == "files") {
    #############################################################################################################################
    # files.log
    # https://docs.zeek.org/en/stable/scripts/base/frameworks/files/main.zeek.html#type-Files::Info

    if ("_jsonparsesuccess" not in [tags]) {
      dissect {
        id => "dissect_zeek_v51_files_with_all_fields"
        mapping => {
          "[message]" => "%{[zeek_cols][ts]} %{[zeek_cols][fuid]} %{[zeek_cols][uid]} %{[zeek_cols][orig_h]} %{[zeek_cols][orig_p]} %{[zeek_cols][resp_h]} %{[zeek_cols][resp_p]} %{[zeek_cols][source]} %{[zeek_cols][depth]} %{[zeek_cols][analyzers]} %{[zeek_cols][mime_type]} %{[zeek_cols][filename]} %{[zeek_cols][duration]} %{[zeek_cols][local_orig]} %{[zeek_cols][is_orig]} %{[zeek_cols][seen_bytes]} %{[zeek_cols][total_bytes]} %{[zeek_cols][missing_bytes]} %{[zeek_cols][overflow_bytes]} %{[zeek_cols][timedout]} %{[zeek_cols][parent_fuid]} %{[zeek_cols][md5]} %{[zeek_cols][sha1]} %{[zeek_cols][sha256]} %{[zeek_cols][extracted]} %{[zeek_cols][extracted_cutoff]} %{[zeek_cols][extracted_size]} %{[zeek_cols][ftime]}"
        }
      }
      if ("_dissectfailure" in [tags]) {
        mutate {
          id => "mutate_split_zeek_files"
          split => { "[message]" => " " }
        }
        ruby {
          id => "ruby_zip_zeek_files"
          init => "@zeek_files_field_names = [ 'ts', 'fuid', 'uid', 'orig_h', 'orig_p', 'resp_h', 'resp_p', 'source', 'depth', 'analyzers', 'mime_type', 'filename', 'duration', 'local_orig', 'is_orig', 'seen_bytes', 'total_bytes', 'missing_bytes', 'overflow_bytes', 'timedout', 'parent_fuid', 'md5', 'sha1', 'sha256', 'extracted', 'extracted_cutoff', 'extracted_size', 'ftime' ]"
          code => "event.set('[zeek_cols]', @zeek_files_field_names.zip(event.get('[message]')).to_h)"
        }
      }
      if ([zeek_cols][conn_uids]) and ([zeek_cols][conn_uids] != '(empty)') and ([zeek_cols][conn_uids] != '') {
        mutate { id => "mutate_split_zeek_files_conn_uids"
                 split => { "[zeek_cols][conn_uids]" => "," } }
      }
      if ([zeek_cols][tx_hosts]) and ([zeek_cols][tx_hosts] != '(empty)') and ([zeek_cols][tx_hosts] != '') {
        mutate { id => "mutate_split_zeek_files_tx_hosts"
                 split => { "[zeek_cols][tx_hosts]" => "," } }
      }
      if ([zeek_cols][rx_hosts]) and ([zeek_cols][rx_hosts] != '(empty)') and ([zeek_cols][rx_hosts] != '') {
        mutate { id => "mutate_split_zeek_files_rx_hosts"
                 split => { "[zeek_cols][rx_hosts]" => "," } }
      }
      mutate { id => "mutate_split_zeek_files_parent_fuid_and_analyzers"
               split => { "[zeek_cols][parent_fuid]" => ","
                          "[zeek_cols][analyzers]" => "," } }
    }

    if ([zeek_cols][conn_uids] and [zeek_cols][conn_uids][0]) {
      mutate {
        id => "mutate_add_field_zeek_files_conn_uids_to_uid"
        add_field => { "[rootId]"         => "%{[zeek_cols][conn_uids][0]}"
                       "[zeek_cols][uid]" => "%{[zeek_cols][conn_uids][0]}" }
        }
    } else if (![zeek_cols][uid]) {
      mutate {
        id => "mutate_add_fields_zeek_files_fuid_to_uid"
        add_field =>  { "[zeek_cols][uid]" => "%{[zeek_cols][fuid]}" }
      }
    }

    if ([zeek_cols][tx_hosts] and [zeek_cols][tx_hosts][0]) {
      mutate { id => "mutate_add_field_zeek_tx_hosts"
               add_field => { "[source][ip]" => "%{[zeek_cols][tx_hosts][0]}" } }
    }

    if ([zeek_cols][rx_hosts] and [zeek_cols][rx_hosts][0]) {
      mutate { id => "mutate_add_field_zeek_rx_hosts"
               add_field => { "[destination][ip]" => "%{[zeek_cols][rx_hosts][0]}" } }
    }

  }

} # end Filter
