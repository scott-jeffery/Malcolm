# Copyright (c) 2025 Battelle Energy Alliance, LLC.  All rights reserved.

filter {

  # see malcolm_severity.yaml for mappings to severity scores

  mutate {
    id => "mutate_add_field_env_logstash_severity_scoring_zeek"
    add_field => { "[@metadata][ENV_LOGSTASH_SEVERITY_SCORING_ZEEK]" => "${LOGSTASH_SEVERITY_SCORING:false}" }
  }
  if ([@metadata][ENV_LOGSTASH_SEVERITY_SCORING_ZEEK] == "true") {

    # connection states of interest (see conn_states.yaml)
    # https://docs.zeek.org/en/current/scripts/base/protocols/conn/main.zeek.html#type-Conn::Info
    # https://docs.zeek.org/en/master/logs/conn.html
    if ([zeek][conn][conn_state]) {
      if ([zeek][conn][conn_state] == "S0") {
        mutate { id => "mutate_add_field_severity_item_conn_s0"
                 add_field => { "[event][severity_tags]" => "Connection attempt, no reply" } }
      } else if ([zeek][conn][conn_state] == "REJ") {
        mutate { id => "mutate_add_field_severity_item_conn_rej"
                 add_field => { "[event][severity_tags]" => "Connection attempt rejected" } }
      } else if ([zeek][conn][conn_state] == "RSTO") {
        mutate { id => "mutate_add_field_severity_item_conn_rsto"
                 add_field => { "[event][severity_tags]" => "Connection aborted (originator)" } }
      } else if ([zeek][conn][conn_state] == "RSTR") {
        mutate { id => "mutate_add_field_severity_item_conn_rstr"
                 add_field => { "[event][severity_tags]" => "Connection aborted (responder)" } }
      }
    }

    # tunneled/VPN traffic
    if ([event][dataset] == "tunnel") {
      mutate { id => "mutate_add_field_severity_item_tunnel"
               add_field => { "[event][severity_tags]" => "Tunneled traffic" } }
    }

    # check for long connection duration
    if ([zeek][conn][long] == "true") {
      mutate { id => "mutate_add_field_severity_item_zeek_conn_long"
               add_field => { "[event][severity_tags]" => "Long connection" } }
    }

    # assign severity to notice based on category
    if ([event][dataset] == "notice") {
      if ("ATTACK" in [rule][category]) {
        mutate { id => "mutate_add_field_severity_notice_mitre_attack"
                 add_field => { "[event][severity_tags]" => "MITRE ATT&CK framework tactic or technique" } }
      } else if ("ATTACKICS" in [rule][category]) {
        mutate { id => "mutate_add_field_severity_notice_mitre_attack_ics"
                 add_field => { "[event][severity_tags]" => "MITRE ATT&CK for ICS framework tactic or technique" } }
      } else if ("Scan" in [rule][category]) {
        mutate { id => "mutate_add_field_severity_notice_scan"
                 add_field => { "[event][severity_tags]" => "Notice (scan)" } }
      } else if ("LongConnection" in [rule][category]) {
        mutate { id => "mutate_add_field_severity_notice_long_connection"
                 add_field => { "[event][severity_tags]" => "Long connection" } }
      } else if (("FTP" in [rule][category]) or
                 ("HTTP" in [rule][category]) or
                 ("HTTPATTACKS" in [rule][category]) or
                 ("SSL" in [rule][category])) {
        mutate { id => "mutate_add_field_severity_notice_protocol"
                 add_field => { "[event][severity_tags]" => "Notice (protocol)" } }
      } else if (([vulnerability][enumeration] == "CVE") or
                 ("EternalSafety" in [rule][category]) or
                 ("Ripple20" in [rule][category]) or
                 ("Zerologon" in [rule][category])) {
        mutate { id => "mutate_add_field_severity_notice_vuln"
                 add_field => { "[event][severity_tags]" => "Notice (vulnerability)" } }
      } else {
        mutate { id => "mutate_add_field_severity_notice_other"
                 add_field => { "[event][severity_tags]" => "Notice (other)" } }
      }
    }

    # intel logs get one score at the moment
    if ([zeek][intel]) {
      mutate { id => "mutate_add_field_severity_intel_other"
               add_field => { "[event][severity_tags]" => "Intelligence" } }
    }

    # weird logs get one score at the moment
    if ([zeek][weird]) {
      mutate { id => "mutate_add_field_severity_weird_other"
               add_field => { "[event][severity_tags]" => "Weird" } }
    }

    # assign score to signatures based on engine
    if ([zeek][signatures]) {
      if ('Capa' in [event][module]) {
        mutate { id => "mutate_add_field_severity_signatures_capa"
                 add_field => { "[event][severity_tags]" => "Signature (capa)" } }
      } else if ('ClamAV' in [event][module]) {
        mutate { id => "mutate_add_field_severity_signatures_clamav"
                 add_field => { "[event][severity_tags]" => "Signature (ClamAV)" } }
      } else if ('Yara' in [event][module]) {
        mutate { id => "mutate_add_field_severity_signatures_yara"
                 add_field => { "[event][severity_tags]" => "Signature (YARA)" } }
      } else {
        mutate { id => "mutate_add_field_severity_signatures_other"
                 add_field => { "[event][severity_tags]" => "Signature" } }
      }
    }

    # ruby_calculate_final_severity_score will be performed in the enrichment stage of severity calculation

  } # LOGSTASH_SEVERITY_SCORING env check

} # filter
