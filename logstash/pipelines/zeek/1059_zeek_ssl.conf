########################
# Copyright (c) 2025 Battelle Energy Alliance, LLC.  All rights reserved.
#######################

filter {


  if ([log_source] == "ssl") {
    #############################################################################################################################
    # ssl.log
    # https://docs.zeek.org/en/stable/scripts/base/protocols/ssl/main.zeek.html#type-SSL::Info

    if ("_jsonparsesuccess" in [tags]) {
      mutate {
        id => "mutate_rename_zeek_json_ssl_fields"
        rename => { "[zeek_cols][version]" => "[zeek_cols][ssl_version]" }
      }

    } else {
      dissect {
        id => "dissect_zeek_ssl_v1_with_ja4"
        mapping => {
          "[message]" => "%{[zeek_cols][ts]} %{[zeek_cols][uid]} %{[zeek_cols][orig_h]} %{[zeek_cols][orig_p]} %{[zeek_cols][resp_h]} %{[zeek_cols][resp_p]} %{[zeek_cols][ssl_version]} %{[zeek_cols][cipher]} %{[zeek_cols][curve]} %{[zeek_cols][server_name]} %{[zeek_cols][resumed]} %{[zeek_cols][last_alert]} %{[zeek_cols][next_protocol]} %{[zeek_cols][established]} %{[zeek_cols][ssl_history]} %{[zeek_cols][cert_chain_fps]} %{[zeek_cols][client_cert_chain_fps]} %{[zeek_cols][sni_matches_cert]} %{[zeek_cols][validation_status]} %{[zeek_cols][ja4]} %{[zeek_cols][ja4s]}"
        }
      }
      if ("_dissectfailure" in [tags]) {
        mutate {
          id => "mutate_split_zeek_ssl"
          split => { "[message]" => " " }
        }
        ruby {
          id => "ruby_zip_zeek_ssl"
          init => "@zeek_ssl_field_names = [ 'ts', 'uid', 'orig_h', 'orig_p', 'resp_h', 'resp_p', 'ssl_version', 'cipher', 'curve', 'server_name', 'resumed', 'last_alert', 'next_protocol', 'established', 'ssl_history', 'cert_chain_fps', 'client_cert_chain_fps', 'sni_matches_cert', 'validation_status', 'ja4', 'ja4s' ]"
          code => "event.set('[zeek_cols]', @zeek_ssl_field_names.zip(event.get('[message]')).to_h)"
        }
      }
      mutate { id => "mutate_split_zeek_ssl_commas"
               split => { "[zeek_cols][cert_chain_fuids]" => ","
                          "[zeek_cols][client_cert_chain_fuids]" => ","
                          "[zeek_cols][cert_chain_fps]" => ","
                          "[zeek_cols][client_cert_chain_fps]" => "," } }
    }

    mutate {
      id => "mutate_add_fields_zeek_ssl"
      add_field => {
        "[zeek_cols][proto]" => "tcp"
        "[zeek_cols][service]" => "tls"
      }
    }

  }

} # end Filter
