# Copyright (c) 2025 Battelle Energy Alliance, LLC.  All rights reserved.

name: "${PCAP_NODE_NAME:malcolm}"

logging.metrics.enabled: false

#================================ Inputs =======================================

#-------------------------- "Real" Zeek logs -----------------------------------
filebeat.inputs:
- type: log
  paths:
    - ${FILEBEAT_ZEEK_LOG_PATH:/zeek/current}/*.log
  # see comment below for signatures(_carved).log
  exclude_files: ['signatures\(_carved.*\)\.log$']
  symlinks: true
  fields_under_root: true
  tags: ["_filebeat_zeek_malcolm_upload"]
  compression_level: 0
  exclude_lines: ['^\s*#']
  scan_frequency: ${FILEBEAT_SCAN_FREQUENCY:10s}
  clean_inactive: ${FILEBEAT_CLEAN_INACTIVE:180m}
  ignore_older: ${FILEBEAT_IGNORE_OLDER:120m}
  close_inactive: ${FILEBEAT_CLOSE_INACTIVE:120s}
  close_renamed: ${FILEBEAT_CLOSE_RENAMED:true}
  close_removed: ${FILEBEAT_CLOSE_REMOVED:true}
  close_eof: ${FILEBEAT_CLOSE_EOF:true}
  clean_removed: ${FILEBEAT_CLEAN_REMOVED:true}

- type: log
  paths:
    - ${FILEBEAT_ZEEK_LOG_LIVE_PATH:/zeek/live}/spool/logger-*/*.log
  symlinks: true
  fields_under_root: true
  tags: ["_filebeat_zeek_malcolm_live"]
  compression_level: 0
  exclude_lines: ['^\s*#']
  scan_frequency: ${FILEBEAT_SCAN_FREQUENCY:10s}
  clean_inactive: ${FILEBEAT_CLEAN_INACTIVE:180m}
  ignore_older: ${FILEBEAT_IGNORE_OLDER:120m}
  close_inactive: ${FILEBEAT_CLOSE_INACTIVE_LIVE:90m}
  close_renamed: ${FILEBEAT_CLOSE_RENAMED:true}
  close_removed: ${FILEBEAT_CLOSE_REMOVED:true}
  close_eof: false
  clean_removed: ${FILEBEAT_CLEAN_REMOVED:true}

#-------------------------- Carved file signature hit log ----------------------
# signatures(_carved).log is different, as it comes from file carving and is
# "live" regardless of whether the other *.log files that may be processed
# after the fact. The most important difference is close_eof, as
# we don't want to close signatures(_carved).log when we get to the end of the
# file as it will likely be written to again shortly. For these reasons we
# exclude it in the main filebeat log input (see above) and handle it with
# custom settings here.
- type: log
  paths:
    - ${FILEBEAT_ZEEK_LOG_PATH:/zeek/current}/signatures(_carved*).log
  symlinks: true
  fields_under_root: true
  tags: ["_filebeat_zeek_malcolm_live"]
  compression_level: 0
  exclude_lines: ['^\s*#']
  scan_frequency: ${FILEBEAT_SCAN_FREQUENCY:10s}
  clean_inactive: 200m
  ignore_older: 180m
  close_inactive: 120m
  close_renamed: false
  close_removed: true
  close_eof: false
  clean_removed: true

#-------------------------- Suricata EVE JSON logs -----------------------------
- type: log
  paths:
    - ${FILEBEAT_SURICATA_LOG_PATH:/suricata}/suricata-*/eve*.json
  symlinks: true
  fields_under_root: true
  tags: ["_filebeat_suricata_malcolm_upload"]
  compression_level: 0
  scan_frequency: ${FILEBEAT_SCAN_FREQUENCY:10s}
  clean_inactive: ${FILEBEAT_CLEAN_INACTIVE:180m}
  ignore_older: ${FILEBEAT_IGNORE_OLDER:120m}
  close_inactive: ${FILEBEAT_CLOSE_INACTIVE_LIVE:90m}
  close_renamed: ${FILEBEAT_CLOSE_RENAMED:true}
  close_removed: ${FILEBEAT_CLOSE_REMOVED:true}
  # We're now submitting uploaded PCAP to Suricata over a socket,
  #   but Suricata doesn't let us know when processing is complete.
  #   Reaching EOF doesn't necessarily mean the file is done
  #   being written to. We need to treat the results more like "live"
  #   even though the traffic itself isn't.
  close_eof: false
  clean_removed: ${FILEBEAT_CLEAN_REMOVED:true}

- type: log
  paths:
    - ${FILEBEAT_SURICATA_LOG_PATH:/suricata}/live/eve*.json
  symlinks: true
  fields_under_root: true
  tags: ["_filebeat_suricata_malcolm_live"]
  compression_level: 0
  scan_frequency: ${FILEBEAT_SCAN_FREQUENCY:10s}
  clean_inactive: ${FILEBEAT_CLEAN_INACTIVE:180m}
  ignore_older: ${FILEBEAT_IGNORE_OLDER:120m}
  close_inactive: ${FILEBEAT_CLOSE_INACTIVE_LIVE:90m}
  close_renamed: ${FILEBEAT_CLOSE_RENAMED:true}
  close_removed: ${FILEBEAT_CLOSE_REMOVED:true}
  close_eof: false
  clean_removed: ${FILEBEAT_CLEAN_REMOVED:true}

#-------------------------- Uploaded Windows EVTX Logs (as JSON) ---------------
#                           (see evtx_to_jsonl.sh)
- type: log
  paths:
    - ${FILEBEAT_ZEEK_LOG_PATH:/zeek/current}/*.evtx.json
  symlinks: true
  json:
    expand_keys: true
    add_error_key: false
    ignore_decoding_error: true
    keys_under_root: false
  tags: ["_evtx_to_json"]
  compression_level: 0
  scan_frequency: ${FILEBEAT_SCAN_FREQUENCY:10s}
  clean_inactive: ${FILEBEAT_CLEAN_INACTIVE:180m}
  ignore_older: ${FILEBEAT_IGNORE_OLDER:120m}
  close_inactive: ${FILEBEAT_CLOSE_INACTIVE:120s}
  close_renamed: ${FILEBEAT_CLOSE_RENAMED:true}
  close_removed: ${FILEBEAT_CLOSE_REMOVED:true}
  close_eof: ${FILEBEAT_CLOSE_EOF:true}
  clean_removed: ${FILEBEAT_CLEAN_REMOVED:true}

#================================ Outputs ======================================

#-------------------------- Logstash Output ------------------------------------
output.logstash:
  hosts: ["${LOGSTASH_HOST:logstash:5044}"]
  ssl.enabled: ${BEATS_SSL:false}
  ssl.certificate_authorities: ["/certs/ca.crt"]
  ssl.certificate: "/certs/client.crt"
  ssl.key: "/certs/client.key"
  ssl.supported_protocols: "TLSv1.2"
  ssl.verification_mode: "none"
