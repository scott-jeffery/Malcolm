---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: malcolm-ingress-https
  namespace: malcolm
  annotations:
    alb.ingress.kubernetes.io/group.name: "malcolm-ingress-group"
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/target-type: "ip"
    alb.ingress.kubernetes.io/ip-address-type: "ipv4"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/backend-protocol: "HTTPS"
    alb.ingress.kubernetes.io/auth-on-unauthenticated-request: "allow"
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:region-code:111111111111:certificate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
    alb.ingress.kubernetes.io/ssl-policy: "ELBSecurityPolicy-TLS13-1-2-2021-06"
    alb.ingress.kubernetes.io/healthcheck-protocol: "HTTPS"
    alb.ingress.kubernetes.io/healthcheck-port: "8443"
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "30"
spec:
  ingressClassName: alb
  rules:
  - host: "malcolm.example.org"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: malcolm-alb-nginx-proxy
            port:
              number: 443
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: malcolm-ingress-opensearch
  namespace: malcolm
  annotations:
    alb.ingress.kubernetes.io/group.name: "malcolm-ingress-group"
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/target-type: "ip"
    alb.ingress.kubernetes.io/ip-address-type: "ipv4"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 9200}]'
    alb.ingress.kubernetes.io/backend-protocol: "HTTPS"
    alb.ingress.kubernetes.io/auth-on-unauthenticated-request: "allow"
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:region-code:111111111111:certificate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
    alb.ingress.kubernetes.io/ssl-policy: "ELBSecurityPolicy-TLS13-1-2-2021-06"
    alb.ingress.kubernetes.io/healthcheck-protocol: "HTTPS"
    alb.ingress.kubernetes.io/healthcheck-port: "8443"
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "180"
spec:
  ingressClassName: alb
  rules:
  - host: "malcolm.example.org"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: malcolm-alb-nginx-proxy
            port:
              number: 9200
---
apiVersion: v1
kind: Service
metadata:
  name: malcolm-alb-nginx-proxy
  namespace: malcolm
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
spec:
  type: LoadBalancer
  selector:
    app: nginx-proxy
  ports:
    - port: 443
      protocol: TCP
      name: https
    - port: 8443
      protocol: TCP
      name: http
    - port: 9200
      protocol: TCP
      name: opensearch
---
apiVersion: v1
kind: Service
metadata:
  name: malcolm-nlb-logstash
  namespace: malcolm
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
spec:
  type: LoadBalancer
  selector:
    app: logstash
  ports:
    - port: 5044
      targetPort: 5044
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: malcolm-nlb-tcp-json
  namespace: malcolm
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
spec:
  type: LoadBalancer
  selector:
    app: filebeat
  ports:
    - port: 5045
      targetPort: 5045
      protocol: TCP
